{"version":3,"sources":["confirm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Confirm","props","Root","show","open","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","onClick","src","alt","title","description","okText","canceltext","entered","Overlay","defaultProps","App","useState","isOpen","setIsOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAYMA,EAA2B,SAACC,GAIhC,OACI,mCAEA,cAAC,IAAWC,KAAZ,CAAiBC,KAAMF,EAAMG,KAAMC,GAAIC,WAAvC,SACE,eAAC,IAAD,CAAQF,KAAMH,EAAMG,KAAMG,QAASN,EAAMM,QAAzC,UAEE,cAAC,IAAWC,MAAZ,CACAH,GAAIC,WACJG,MAAM,oCACNC,UAAU,oBACVC,QAAQ,gBACRC,MAAM,oCACNC,UAAU,gBACVC,QAAQ,oBAPR,SASE,sBAAKC,UAAU,+EAAf,UACE,yBAAQC,QAAS,kBAAIf,EAAMM,SAAQ,IAAQQ,UAAU,yBAArD,cAA+E,qBAAKE,IAAI,sEAAsEC,IAAI,aAClK,qBAAKH,UAAU,qDAAf,SACA,qBAAKE,IAAI,+DAA+DC,IAAI,aAE5E,oBAAIH,UAAU,0CAAd,SAAyDd,EAAMkB,QAC/D,mBAAGJ,UAAU,oEAAb,SAAkFd,EAAMmB,cACxF,sBAAKL,UAAU,kCAAf,UACE,wBAAQC,QAAS,kBAAIf,EAAMM,SAAQ,IAAQQ,UAAU,qGAArD,SAA2Jd,EAAMoB,SACjK,wBAAQL,QAAS,kBAAIf,EAAMM,SAAQ,IAAQQ,UAAU,mGAArD,SAAyJd,EAAMqB,qBAKrK,cAAC,IAAWd,MAAZ,CACAH,GAAIC,WACJG,MAAM,kCACNC,UAAU,YACVC,QAAQ,aACRY,QAAQ,aACRX,MAAM,kCACNC,UAAU,aACVC,QAAQ,YARR,SAUE,cAAC,IAAOU,QAAR,CAAgBT,UAAU,0CAUtCf,EAAQyB,aAAe,CACnBrB,MAAM,EACNe,MAAO,iBACPC,YAAa,6EACbC,OAAQ,SACRC,WAAY,UAGDtB,QC1DA0B,MAZf,WAEE,MAA2BC,oBAAS,GAApC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKd,UAAU,0EAAf,UACE,wBAAQA,UAAU,gCAAgCC,QAAS,kBAAIa,GAAWD,IAA1E,yCACA,cAAC,EAAD,CAASP,OAAO,SAASjB,KAAMwB,EAAQrB,QAASsB,QCIvCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65b467a1.chunk.js","sourcesContent":["import { Dialog, Transition } from '@headlessui/react';\r\nimport { Fragment } from 'react';\r\n\r\ninterface Props {\r\n    title?: string;\r\n    description?: string;\r\n    okText?: string;\r\n    canceltext?: string;\r\n    open?: boolean;\r\n    onClose: (open:false) => void;\r\n}\r\n\r\nconst Confirm: React.FC<Props> = (props) => {\r\n\r\n  \r\n    \r\n  return (\r\n      <>\r\n        \r\n      <Transition.Root show={props.open} as={Fragment}>\r\n        <Dialog open={props.open} onClose={props.onClose}>\r\n          \r\n          <Transition.Child \r\n          as={Fragment}\r\n          enter=\"transition-transform duration-700\"\r\n          enterFrom=\"-translate-y-full\"\r\n          enterTo=\"translate-y-0\"\r\n          leave=\"transition-transform duration-500\"\r\n          leaveFrom=\"translate-y-0\"\r\n          leaveTo=\"-translate-y-full\"\r\n          >\r\n            <div className=\"fixed top-20 flex  flex-col h-96 left-1/3  z-20 p-5 transform bg-white w-96 \">\r\n              <button onClick={()=>props.onClose(false)} className=\"absolute top-0 right-0\"> <img src=\"https://img.icons8.com/material-outlined/24/000000/multiply--v1.png\" alt=\"cross\"/></button>\r\n              <div className=\" self-center border-2 rounded-full  border-red-600\">\r\n              <img src=\"https://img.icons8.com/material-sharp/90/fa314a/multiply.png\" alt=\"cross1\"/>   \r\n              </div> \r\n              <h1 className=\"text-xl w-full flex justify-center mt-5\">{props.title}</h1>\r\n              <p className=\"text-gray-600 w-full flex justify-center text-center text-sm mt-4\">{props.description}</p>\r\n              <div className=\"w-full flex justify-center mt-8\">\r\n                <button onClick={()=>props.onClose(false)} className=\"py-1 rounded-sm w-40 text-center px-8 mx-2 text-white justify-center hover:bg-gray-700 bg-gray-400\">{props.okText}</button>\r\n                <button onClick={()=>props.onClose(false)} className=\"py-1 rounded-sm w-40 text-center px-8 mx-2 text-white justify-center hover:bg-red-700 bg-red-500\">{props.canceltext}</button>\r\n              </div>\r\n            </div>\r\n\r\n          </Transition.Child>\r\n          <Transition.Child \r\n          as={Fragment}\r\n          enter=\"transition-opacity duration-700\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-50\"\r\n          entered=\"opacity-50\"\r\n          leave=\"transition-opacity duration-500\"\r\n          leaveFrom=\"opacity-50\"\r\n          leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 z-10 bg-black\"> \r\n            </Dialog.Overlay>\r\n\r\n          </Transition.Child>\r\n        </Dialog>\r\n      </Transition.Root>\r\n      </>\r\n  );\r\n};\r\n\r\nConfirm.defaultProps = {\r\n    open: false,\r\n    title: \"Are You Sure ?\",\r\n    description: \"Do you really want to delete these records? This process cannot be undone.\",\r\n    okText: \"Accept\",\r\n    canceltext: \"Cancel\",\r\n}\r\n\r\nexport default Confirm;","import { useState, } from 'react';\nimport Confirm from './confirm';\n\nfunction App() {\n\n  const [isOpen,setIsOpen] = useState(false);\n\n  return (\n    <div className=\"App fixed inset-0 flex items-center justify-center justify-items-center\">\n      <button className=\"text-blue-600 hover:underline\" onClick={()=>setIsOpen(!isOpen)}>Click to Open Confirm Modal</button>\n      <Confirm okText=\"Select\" open={isOpen} onClose={setIsOpen}></Confirm>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}